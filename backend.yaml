- name: Backend Configuration
  hosts: backend
  become: yes
  vars_files:
    - backend_vars.yaml
  tasks:
    - name: Creating Expense user
      ansible.builtin.user:
        name: expense

    - name: Disable nodejs
      ansible.builtin.command: dnf module disable nodejs -y

    - name: Enable nodejs 20
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: Install nodejs
      ansible.builtin.package:
        name: "{{ item }}"
        state: present 
      loop:
      - nodejs
      - mysql
    
    - name: Download Application code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: create App directory
      ansible.builtin.file:
        name: /app
        state: directory 

    - name: Extarct the Code
      ansible.builtin.unarchive:
        src: /tmp/backend.zip 
        dest: /app
        remote_src: yes

    - name: install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app
    
    - name: Copy the backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service
    
    - name: ansible to install pymysql
      ansible.builtin.pip:
        name:
        - PyMySQL
        - cryptography
        executable: pip3.9


    - name: Import Mysql Data
      community.mysql.mysql_db:
        login_user: "{{ login_user }}"
        login_password: "{{ login_password }}"
        login_host: "{{ login_host }}"    
        target: /app/schema/backend.sql
        name: all
        state: import
    


    
